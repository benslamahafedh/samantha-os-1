events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Gzip compression (disabled for audio streams)
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=60r/s;
    limit_req_zone $binary_remote_addr zone=audio:10m rate=100r/s;
    
    # WebSocket upgrade map
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    
    # Upstream for Chainlit application
    upstream chainlit_backend {
        server 127.0.0.1:8000;
        keepalive 32;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }
    
    # HTTP server - Let certbot --nginx manage SSL configuration
    server {
        listen 80;
        server_name samantha-os-complete.eastus.azurecontainer.io;
        
        # Azure health check endpoint (allow HTTP for health checks)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Let's Encrypt ACME challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri $uri/ =404;
        }
        
        # Main application (certbot --nginx will add redirect to HTTPS automatically)
        location / {
            limit_req zone=general burst=100 nodelay;
            
            proxy_pass http://chainlit_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers for audio streaming
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,X-Real-IP,X-Forwarded-For,X-Forwarded-Proto' always;
            add_header 'Access-Control-Expose-Headers' 'Authorization' always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,X-Real-IP,X-Forwarded-For,X-Forwarded-Proto';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # Standard timeouts
            proxy_read_timeout 300;
            proxy_connect_timeout 60;
            proxy_send_timeout 300;
            
            # Handle WebSocket upgrade attempts
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
        
        # Static files for Samantha interface
        location /public/ {
            alias /app/public/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # CORS for static assets
            add_header 'Access-Control-Allow-Origin' '*' always;
            
            # Handle specific file types
            location ~* \.(js|css)$ {
                expires 1d;
                add_header Cache-Control "public, no-cache";
                add_header 'Access-Control-Allow-Origin' '*' always;
            }
            
            location ~* \.(png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header 'Access-Control-Allow-Origin' '*' always;
            }
        }
        
        # Primary WebSocket endpoint for Chainlit
        location /ws {
            limit_req zone=audio burst=50 nodelay;
            
            proxy_pass http://chainlit_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # CORS headers for WebSocket
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            
            # WebSocket specific timeouts (extended for audio streaming)
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
            proxy_connect_timeout 86400;
            
            # Disable buffering for real-time communication
            proxy_buffering off;
            proxy_request_buffering off;
        }
        
        # Additional WebSocket endpoints that Chainlit might use
        location /socket.io/ {
            limit_req zone=audio burst=50 nodelay;
            
            proxy_pass http://chainlit_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
            proxy_buffering off;
            proxy_request_buffering off;
        }
        
        # Chainlit API endpoints
        location /api/ {
            limit_req zone=api burst=50 nodelay;
            
            proxy_pass http://chainlit_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers for API
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # API specific timeouts
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
        }
        
        # Audio streaming endpoints - Critical for voice functionality
        location /audio {
            limit_req zone=audio burst=100 nodelay;
            
            proxy_pass http://chainlit_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Critical headers for audio streaming
            proxy_set_header Range $http_range;
            proxy_set_header If-Range $http_if_range;
            proxy_no_cache $http_range $http_if_range;
            
            # CORS headers for audio
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, HEAD' always;
            add_header 'Access-Control-Allow-Headers' 'Range, Content-Type, Accept-Encoding, Accept-Ranges' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range, Accept-Ranges' always;
            
            # Handle preflight for audio requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, HEAD';
                add_header 'Access-Control-Allow-Headers' 'Range, Content-Type, Accept-Encoding, Accept-Ranges';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # Disable all buffering for real-time audio streaming
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_cache off;
            
            # Extended timeouts for audio streaming
            proxy_read_timeout 600;
            proxy_send_timeout 600;
            proxy_connect_timeout 60;
            
            # Enable range requests for audio
            proxy_set_header Accept-Ranges bytes;
        }
        
        # Audio chunk streaming (PCM16 data from OpenAI Realtime)
        location /audio-chunk {
            limit_req zone=audio burst=200 nodelay;
            
            proxy_pass http://chainlit_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Accept' always;
            
            # Disable all buffering for real-time chunks
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_cache off;
            
            # Short timeouts for chunk delivery
            proxy_read_timeout 30;
            proxy_send_timeout 30;
            proxy_connect_timeout 30;
        }
        
        # EventSource/Server-Sent Events for real-time audio
        location /events {
            limit_req zone=audio burst=50 nodelay;
            
            proxy_pass http://chainlit_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cache-Control no-cache;
            
            # SSE specific headers
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            chunked_transfer_encoding off;
            
            # CORS headers for SSE
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            
            # Disable buffering for SSE
            proxy_buffering off;
            proxy_cache off;
            
            # Long timeout for SSE connections
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }
        
        # Files endpoint for audio file uploads/downloads
        location /files {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://chainlit_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers for file operations
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Accept, Authorization' always;
            
            # Handle file uploads
            client_max_body_size 100M;
            proxy_read_timeout 300;
            proxy_send_timeout 300;
            proxy_connect_timeout 300;
        }
    }
    
    # Note: certbot --nginx will automatically add the HTTPS server block
    # with proper SSL configuration when you run the command
} 