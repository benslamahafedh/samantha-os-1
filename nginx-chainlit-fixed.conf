events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Enhanced logging for debugging 502 errors
    log_format detailed '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time" '
                       'upstream_status="$upstream_status"';
    
    access_log /var/log/nginx/access.log detailed;
    error_log /var/log/nginx/error.log info;
    
    # Optimized settings for Chainlit
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 75;
    keepalive_requests 10000;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Disable gzip for real-time content
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;
    gzip_disable "audio/";
    
    # Rate limiting (more lenient for debugging)
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=200r/s;
    limit_req_zone $binary_remote_addr zone=audio:10m rate=500r/s;
    limit_req_zone $binary_remote_addr zone=websocket:10m rate=1000r/s;
    
    # WebSocket upgrade map
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    
    # Upstream for Chainlit with health checks
    upstream chainlit_backend {
        server 127.0.0.1:8000 max_fails=3 fail_timeout=30s;
        keepalive 64;
        keepalive_requests 10000;
        keepalive_timeout 300s;
    }
    
    # HTTP server
    server {
        listen 80;
        server_name _;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Chainlit WebSocket connections (CRITICAL for audio)
        location ~ ^/(ws|socket\.io|_stcore/stream) {
            limit_req zone=websocket burst=200 nodelay;
            
            proxy_pass http://chainlit_backend;
            proxy_http_version 1.1;
            
            # Essential WebSocket headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # CORS headers for WebSocket
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-Requested-With' always;
            
            # Critical: Disable ALL buffering for real-time communication
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_cache off;
            proxy_cache_bypass $http_upgrade;
            
            # Extended timeouts for persistent connections
            proxy_connect_timeout 10s;
            proxy_send_timeout 86400s;
            proxy_read_timeout 86400s;
            
            # WebSocket-specific settings
            proxy_redirect off;
            proxy_pass_request_headers on;
            
            # Error handling for 502
            proxy_intercept_errors on;
            error_page 502 = @fallback;
        }
        
        # Chainlit audio chunk endpoints
        location ~ ^/(audio|audio-chunk|stream) {
            limit_req zone=audio burst=1000 nodelay;
            
            proxy_pass http://chainlit_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Audio-specific headers
            proxy_set_header Range $http_range;
            proxy_set_header If-Range $http_if_range;
            proxy_set_header Accept-Ranges bytes;
            
            # CORS for audio streaming
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, HEAD' always;
            add_header 'Access-Control-Allow-Headers' 'Range, Content-Type, Accept-Encoding, Accept-Ranges, Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range, Accept-Ranges' always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, HEAD';
                add_header 'Access-Control-Allow-Headers' 'Range, Content-Type, Accept-Encoding, Accept-Ranges, Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # CRITICAL: Disable ALL buffering for real-time audio
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_cache off;
            proxy_no_cache 1;
            proxy_cache_bypass 1;
            
            # Optimized timeouts for audio chunks
            proxy_connect_timeout 10s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Error handling for 502
            proxy_intercept_errors on;
            error_page 502 = @fallback;
        }
        
        # Chainlit API endpoints
        location /api/ {
            limit_req zone=api burst=200 nodelay;
            
            proxy_pass http://chainlit_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With' always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # API timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Error handling for 502
            proxy_intercept_errors on;
            error_page 502 = @fallback;
        }
        
        # Static files
        location /public/ {
            alias /app/public/;
            expires 1h;
            add_header Cache-Control "public, max-age=3600";
            add_header 'Access-Control-Allow-Origin' '*' always;
            
            # Specific handling for JavaScript files
            location ~* \.js$ {
                expires -1;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
                add_header 'Access-Control-Allow-Origin' '*' always;
            }
        }
        
        # Main application (with WebSocket support)
        location / {
            limit_req zone=general burst=400 nodelay;
            
            proxy_pass http://chainlit_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket upgrade support for main app
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With, X-Real-IP, X-Forwarded-For, X-Forwarded-Proto' always;
            add_header 'Access-Control-Expose-Headers' 'Authorization' always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With, X-Real-IP, X-Forwarded-For, X-Forwarded-Proto';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # Standard timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Error handling for 502
            proxy_intercept_errors on;
            error_page 502 = @fallback;
        }
        
        # Fallback location for 502 errors
        location @fallback {
            return 502 '{"error": "Backend service temporarily unavailable", "message": "Samantha is starting up, please try again in a moment"}';
            add_header Content-Type application/json;
            add_header 'Access-Control-Allow-Origin' '*' always;
        }
        
        # Error pages
        error_page 502 /502.html;
        location = /502.html {
            root /app/public;
            internal;
        }
    }
} 